plot(cars)
result
results = read.csv("c_result.csv")
results
results
results = 0
results = read.csv("c_result.csv")
View(results)
results = aggregate( time ~ n:alg, data=results, FUN=mean)
results = aggregate( time ~ n:algorithm, data=results, FUN=mean)
results = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results
results$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results
results = read.csv("c_result.csv")
results$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results
order(results)
results[order(results)]
results
order(results$algorithm)
results[order(results$algorithm)]
results[order(results$algorithm)]$algorithm
results$algorithm[order(results$algorithm)]
results$algorithm[order(results$algorithm),size, time]
results$algorithm$time[order(results$algorithm)]
results[order(results$algorithm),]
results = results[order(results$algorithm),]
results
results = read.csv("c_result.csv")
results = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results = results[order(results$algorithm),]
results
results = read.csv("c_result.csv")
results$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results = results[order(results$algorithm),]
results
results = read.csv("c_result.csv")
results$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results = aggregate( time ~ algorithm:matrix_size:sd, data=results, FUN=mean)
results = results[order(results$algorithm),]
results
results = read.csv("c_result.csv")
results$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size:sd, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg
results = results[order(results$algorithm),]
results
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
results
results_avg
c_naive_multiplication = avg_results[avg_results$algorithm=="c_naive_multiplication",]
c_naive_multiplication
c_naive_multiplication = avg_results[avg_results$algorithm=="c_naive_multiplication",]
c_naive_multiplication = avg_results[avg_results$algorithm=="c_naive_multiplication",]
c_naive_multiplication
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_naive_multiplication
csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
aive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_bette
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication
c_better_multiplication
results_avg
results_avg[algorithm]
results_avg[algorithm,]
results_avg$algorithm
results_avg$time
results_avg$sd
clear
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
seq(1,10)
seq(1,0.1,10)
seq(1,10)
seq(1,10)*5
seq(30,90)*20
View(c_naive_multiplication)
lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
testlm = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
ggplot(c_naive_multiplication,aes(matrix_size,time)) + geom_point()
ggplot(c_naive_multiplication,aes(matrix_size,time))
ggplot(c_naive_multiplication,aes(matrix_size,time)) + geom_point()
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
seq(600,1800, by=20)
czas dzialania drugiej funkcji
x = ["czas działania jednej funckji",
"instaulje bibliotekeggplot.2"]
x = data.frame("czas działania jednej funckji",
"instaulje bibliotekeggplot.2")
x
View(x)
install.packages("ggplot2")
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
ggplot(avg_results, aes(n,time)) + geom_point()
ggplot(c_naive_multiplication, aes(n,time)) + geom_point()
ggplot(c_naive_multiplication, aes(matrix_size,time)) + geom_point()
ggplot2(c_naive_multiplication, aes(matrix_size,time)) + geom_point()
ggplot(c_naive_multiplication, aes(matrix_size,time)) + geom_point()
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
c_native_line = data.frame(matrix_size = seq(600,1800, by=20))
c_native_line$time = predict(c_naive_multiplication_fit,c_native_line)
c_GSL_line = data.frame(matrix_size = seq(600,1800, by=20))
c_GSL_line$time = predict(c_GSL_multiplication_fit,c_GSL_line)
c_better_line = data.frame(matrix_size = seq(600,1800, by=20))
c_better_line$time = predict(c_better_multiplication_fit,c_better_line)
ggplot(avg_results, aes(n,time)) + geom_point()
ggplot(results_avg, aes(matrix_size,time)) + geom_point()
last_plot() + geom_line(data=c_native_line, aes(matrix_size,time))
last_plot() + geom_line(data=c_GSL_line, aes(matrix_size,time))
last_plot() + geom_line(data=c_better_line, aes(matrix_size,time))
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
c_native_line = data.frame(matrix_size = seq(600,1800, by=20))
c_native_line$time = predict(c_naive_multiplication_fit,c_native_line)
c_GSL_line = data.frame(matrix_size = seq(600,1800, by=20))
c_GSL_line$time = predict(c_GSL_multiplication_fit,c_GSL_line)
c_better_line = data.frame(matrix_size = seq(600,1800, by=20))
c_better_line$time = predict(c_better_multiplication_fit,c_better_line)
ggplot(results_avg, aes(matrix_size,time)) + geom_point()
last_plot() + geom_line(data=c_native_line, aes(matrix_size,time))
last_plot() + geom_line(data=c_GSL_line, aes(matrix_size,time))
last_plot() + geom_line(data=c_better_line, aes(matrix_size,time))
ggplot(results_avg, aes(matrix_size,time), colour=supp) + geom_point()
ggplot(results_avg, aes(matrix_size,time), colour=algorithm, group=algorithm) + geom_point()
library(ggplot2)
ggplot(results_avg, aes(matrix_size,time), colour=algorithm, group=algorithm) + geom_point()
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) + geom_point()
last_plot() + geom_line(data=c_native_line, aes(x=matrix_size,y=time))
View(c_native_line)
c_native_line$algorithm = "c_naive_multiplication"
View(c_native_line)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) + geom_point()
last_plot() + geom_line(data=c_native_line, aes(x=matrix_size,y=time))
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
c_naive_line = data.frame(matrix_size = seq(600,1800, by=20))
c_naive_line$time = predict(c_naive_multiplication_fit,c_naive_line)
c_naive_line$algorithm = "c_naive_multiplication"
c_GSL_line = data.frame(matrix_size = seq(600,1800, by=20))
c_GSL_line$time = predict(c_GSL_multiplication_fit,c_GSL_line)
c_GSL_line$algorithm = "c_GSL_multiplication"
c_better_line = data.frame(matrix_size = seq(600,1800, by=20))
c_better_line$time = predict(c_better_multiplication_fit,c_better_line)
c_better_line$algorithm = "c_better_multiplication"
library(ggplot2)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) + geom_point()
last_plot() + geom_line(data=c_native_line, aes(x=matrix_size,y=time))
last_plot() + geom_line(data=c_GSL_line, aes(matrix_size,time))
last_plot() + geom_line(data=c_better_line, aes(matrix_size,time))
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
last_plot() + geom_line(data=c_native_line, aes(x=matrix_size,y=time))
last_plot() + geom_line(data=c_GSL_line, aes(matrix_size,time))
last_plot() + geom_line(data=c_better_line, aes(matrix_size,time))
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=.25, position=pd)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=.25, position=pd)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=.25, position=algorithm)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=.25)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=.1)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=.9)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=.1)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=.1) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
last_plot() + geom_line(data=c_native_line, aes(x=matrix_size,y=time))
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=2) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd), width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, colour=black), width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, colour="black"), width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm, colour="black"), width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25, position = pd) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25, position = "pd") +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point(size=1) +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point(size=0.5) +
ggtitle("Matrix multiplication in different algorithms")
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
c_naive_line = data.frame(matrix_size = seq(600,1800, by=20))
c_naive_line$time = predict(c_naive_multiplication_fit,c_naive_line)
c_naive_line$algorithm = "c_naive_multiplication"
c_GSL_line = data.frame(matrix_size = seq(600,1800, by=20))
c_GSL_line$time = predict(c_GSL_multiplication_fit,c_GSL_line)
c_GSL_line$algorithm = "c_GSL_multiplication"
c_better_line = data.frame(matrix_size = seq(600,1800, by=20))
c_better_line$time = predict(c_better_multiplication_fit,c_better_line)
c_better_line$algorithm = "c_better_multiplication"
library(ggplot2)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
last_plot() + geom_line(data=c_native_line, aes(x=matrix_size,y=time))
last_plot() + geom_line(data=c_GSL_line, aes(matrix_size,time))
last_plot() + geom_line(data=c_better_line, aes(matrix_size,time))
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
c_naive_line = data.frame(matrix_size = seq(600,1800, by=20))
c_naive_line$time = predict(c_naive_multiplication_fit,c_naive_line)
c_naive_line$algorithm = "c_naive_multiplication"
c_GSL_line = data.frame(matrix_size = seq(600,1800, by=20))
c_GSL_line$time = predict(c_GSL_multiplication_fit,c_GSL_line)
c_GSL_line$algorithm = "c_GSL_multiplication"
c_better_line = data.frame(matrix_size = seq(600,1800, by=20))
c_better_line$time = predict(c_better_multiplication_fit,c_better_line)
c_better_line$algorithm = "c_better_multiplication"
library(ggplot2)
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
last_plot() + geom_line(data=c_native_line, aes(x=matrix_size,y=time))
last_plot() + geom_line(data=c_GSL_line, aes(matrix_size,time))
last_plot() + geom_line(data=c_better_line, aes(matrix_size,time))
library(ggplot2)
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
c_naive_line = data.frame(matrix_size = seq(600,1800, by=20))
c_naive_line$time = predict(c_naive_multiplication_fit,c_naive_line)
c_naive_line$algorithm = "c_naive_multiplication"
c_GSL_line = data.frame(matrix_size = seq(600,1800, by=20))
c_GSL_line$time = predict(c_GSL_multiplication_fit,c_GSL_line)
c_GSL_line$algorithm = "c_GSL_multiplication"
c_better_line = data.frame(matrix_size = seq(600,1800, by=20))
c_better_line$time = predict(c_better_multiplication_fit,c_better_line)
c_better_line$algorithm = "c_better_multiplication"
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
last_plot() + geom_line(data=c_native_line, aes(x=matrix_size,y=time))
last_plot() + geom_line(data=c_GSL_line, aes(matrix_size,time))
last_plot() + geom_line(data=c_better_line, aes(matrix_size,time))
library(ggplot2)
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
c_naive_line = data.frame(matrix_size = seq(600,1800, by=20))
c_naive_line$time = predict(c_naive_multiplication_fit,c_naive_line)
c_naive_line$algorithm = "c_naive_multiplication"
c_GSL_line = data.frame(matrix_size = seq(600,1800, by=20))
c_GSL_line$time = predict(c_GSL_multiplication_fit,c_GSL_line)
c_GSL_line$algorithm = "c_GSL_multiplication"
c_better_line = data.frame(matrix_size = seq(600,1800, by=20))
c_better_line$time = predict(c_better_multiplication_fit,c_better_line)
c_better_line$algorithm = "c_better_multiplication"
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms")
last_plot() + geom_line(data=c_native_line, aes(x=matrix_size,y=time))
last_plot() + geom_line(data=c_GSL_line, aes(matrix_size,time))
last_plot() + geom_line(data=c_better_line, aes(matrix_size,time))
+ geom_line(data=c_better_line, aes(matrix_size,time))
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_line(data=c_native_line, aes(x=matrix_size,y=time))
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_line(data=c_native_line, aes(x=matrix_size,y=time)) +
geom_line(data=c_GSL_line, aes(matrix_size,time)) +
geom_line(data=c_better_line, aes(matrix_size,time))
library(ggplot2)
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
c_naive_line = data.frame(matrix_size = seq(600,1800, by=20))
c_naive_line$time = predict(c_naive_multiplication_fit,c_naive_line)
c_naive_line$algorithm = "c_naive_multiplication"
c_GSL_line = data.frame(matrix_size = seq(600,1800, by=20))
c_GSL_line$time = predict(c_GSL_multiplication_fit,c_GSL_line)
c_GSL_line$algorithm = "c_GSL_multiplication"
c_better_line = data.frame(matrix_size = seq(600,1800, by=20))
c_better_line$time = predict(c_better_multiplication_fit,c_better_line)
c_better_line$algorithm = "c_better_multiplication"
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_line(data=c_native_line, aes(x=matrix_size,y=time)) +
geom_line(data=c_GSL_line, aes(matrix_size,time)) +
geom_line(data=c_better_line, aes(matrix_size,time))
library(ggplot2)
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
c_naive_line = data.frame(matrix_size = seq(600,1800, by=20))
c_naive_line$time = predict(c_naive_multiplication_fit,c_naive_line)
c_naive_line$algorithm = "c_naive_multiplication"
c_GSL_line = data.frame(matrix_size = seq(600,1800, by=20))
c_GSL_line$time = predict(c_GSL_multiplication_fit,c_GSL_line)
c_GSL_line$algorithm = "c_GSL_multiplication"
c_better_line = data.frame(matrix_size = seq(600,1800, by=20))
c_better_line$time = predict(c_better_multiplication_fit,c_better_line)
c_better_line$algorithm = "c_better_multiplication"
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_line(data=c_native_line, aes(x=matrix_size,y=time)) +
geom_line(data=c_GSL_line, aes(matrix_size,time)) +
geom_line(data=c_better_line, aes(matrix_size,time))
library(ggplot2)
results = read.csv("c_result.csv")
results_avg = aggregate( time ~ algorithm:matrix_size, data=results, FUN=mean)
results_avg$sd = aggregate( time ~ algorithm:matrix_size, data=results, FUN=sd)$time
results_avg = results_avg[order(results_avg$algorithm),]
c_naive_multiplication = results_avg[results_avg$algorithm=="c_naive_multiplication",]
c_GSL_multiplication = results_avg[results_avg$algorithm=="c_GSL_multiplication",]
c_better_multiplication = results_avg[results_avg$algorithm=="c_better_multiplication",]
c_naive_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_naive_multiplication)
c_GSL_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_GSL_multiplication)
c_better_multiplication_fit = lm(time ~ poly(matrix_size, 3, raw=TRUE), data=c_better_multiplication)
c_naive_line = data.frame(matrix_size = seq(600,1800, by=20))
c_naive_line$time = predict(c_naive_multiplication_fit,c_naive_line)
c_naive_line$algorithm = "c_naive_multiplication"
c_GSL_line = data.frame(matrix_size = seq(600,1800, by=20))
c_GSL_line$time = predict(c_GSL_multiplication_fit,c_GSL_line)
c_GSL_line$algorithm = "c_GSL_multiplication"
c_better_line = data.frame(matrix_size = seq(600,1800, by=20))
c_better_line$time = predict(c_better_multiplication_fit,c_better_line)
c_better_line$algorithm = "c_better_multiplication"
ggplot(results_avg, aes(x=matrix_size, y=time, colour=algorithm, group=algorithm)) +
geom_errorbar(aes(ymin=time-sd, ymax=time+sd, group=algorithm), colour="black", width=0.25) +
geom_point() +
ggtitle("Matrix multiplication in different algorithms") +
geom_line(data=c_native_line, aes(x=matrix_size,y=time)) +
geom_line(data=c_GSL_line, aes(matrix_size,time)) +
geom_line(data=c_better_line, aes(matrix_size,time))
